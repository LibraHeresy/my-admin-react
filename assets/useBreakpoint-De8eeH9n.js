import{s as h,R as f,a as l,F as m}from"./index-DgPomFdM.js";const p=["xxl","xl","lg","md","sm","xs"],x=s=>({xs:`(max-width: ${s.screenXSMax}px)`,sm:`(min-width: ${s.screenSM}px)`,md:`(min-width: ${s.screenMD}px)`,lg:`(min-width: ${s.screenLG}px)`,xl:`(min-width: ${s.screenXL}px)`,xxl:`(min-width: ${s.screenXXL}px)`}),$=s=>{const e=s,r=[].concat(p).reverse();return r.forEach((c,a)=>{const n=c.toUpperCase(),i=`screen${n}Min`,t=`screen${n}`;if(!(e[i]<=e[t]))throw new Error(`${i}<=${t} fails : !(${e[i]}<=${e[t]})`);if(a<r.length-1){const o=`screen${n}Max`;if(!(e[t]<=e[o]))throw new Error(`${t}<=${o} fails : !(${e[t]}<=${e[o]})`);const u=`screen${r[a+1].toUpperCase()}Min`;if(!(e[o]<=e[u]))throw new Error(`${o}<=${u} fails : !(${e[o]}<=${e[u]})`)}}),s};function b(){const[,s]=h(),e=x($(s));return f.useMemo(()=>{const r=new Map;let c=-1,a={};return{matchHandlers:{},dispatch(n){return a=n,r.forEach(i=>i(a)),r.size>=1},subscribe(n){return r.size||this.register(),c+=1,r.set(c,n),n(a),c},unsubscribe(n){r.delete(n),r.size||this.unregister()},unregister(){Object.keys(e).forEach(n=>{const i=e[n],t=this.matchHandlers[i];t==null||t.mql.removeListener(t==null?void 0:t.listener)}),r.clear()},register(){Object.keys(e).forEach(n=>{const i=e[n],t=d=>{let{matches:u}=d;this.dispatch(Object.assign(Object.assign({},a),{[n]:u}))},o=window.matchMedia(i);o.addListener(t),this.matchHandlers[i]={mql:o,listener:t},t(o)})},responsiveMap:e}},[s])}const v=(s,e)=>{if(e&&typeof e=="object")for(let r=0;r<p.length;r++){const c=p[r];if(s[c]&&e[c]!==void 0)return e[c]}};function g(){const[,s]=l.useReducer(e=>e+1,0);return s}function w(){let s=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const r=l.useRef(e),c=g(),a=b();return m(()=>{const n=a.subscribe(i=>{r.current=i,s&&c()});return()=>a.unsubscribe(n)},[]),r.current}export{w as a,v as m,p as r,g as u};
